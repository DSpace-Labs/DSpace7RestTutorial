{
	"info": {
		"_postman_id": "3de4a6dd-ae24-43f8-a1e1-250b1b65b294",
		"name": "DSpace 7 Tutorial",
		"description": "Collection of REST API call for the DSpace 7 Tutorial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/authn/login",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authn",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/authn/login",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authn",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/authn/logout",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authn",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/authn/status",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authn",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Status (without token)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/authn/status",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authn",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Registries and configuration",
			"item": [
				{
					"name": "Metadata Schema Registry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/core/metadataschemas",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"metadataschemas"
							]
						}
					},
					"response": []
				},
				{
					"name": "Metadata Fields Registry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/core/metadatafields",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"metadatafields"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bitstream Formats Registry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/core/bitstreamformats",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"bitstreamformats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submission Definitions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/config/submissiondefinitions",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"config",
								"submissiondefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submission Form (traditionalpageone)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/config/submissionforms/traditionalpageone",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"config",
								"submissionforms",
								"traditionalpageone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Submission Form (bitstream-metadata)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/config/submissionforms/bitstream-metadata",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"config",
								"submissionforms",
								"bitstream-metadata"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Content management",
			"item": [
				{
					"name": "Delete an Item",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/core/items/:UUID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"items",
								":UUID"
							],
							"variable": [
								{
									"key": "UUID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Bitstream",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/core/bitstreams/:UUID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"bitstreams",
								":UUID"
							],
							"variable": [
								{
									"key": "UUID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Communities list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/core/communities",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"communities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Items list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/core/items",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Collections list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/core/collections",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"core",
								"collections"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Submission",
			"item": [
				{
					"name": "Create WorkspaceItem",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WorkspaceItem",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add title to WorkspaceItem",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\"op\":\"add\",\"path\":\"/sections/traditionalpageone/dc.title\", \"value\": [{\"value\": \"Test workspace\"}]}\n]"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload PDF",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "extraField",
									"value": "/home/rest7tutorial/sample.pdf",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete file",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\"op\":\"remove\",\"path\":\"/sections/upload/files/0\"}\n]"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create WorkspaceItem from BibTeX force collection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/home/openmind/git/DSpace7/dspace-server-webapp/src/test/resources/org/dspace/app/rest/bibtex-test.bib"
								},
								{
									"key": "extraf",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems?collection=51715dd3-5590-49f2-b227-6a663c849921",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems"
							],
							"query": [
								{
									"key": "collection",
									"value": "51715dd3-5590-49f2-b227-6a663c849921"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a WorkspaceItem",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DOI",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  [\n\t{\n\t   \"op\":\"add\",\n\t   \"path\":\"/sections/traditionalpageone/dc.identifier.doi\", \n\t   \"value\": [{\"value\": \"10.1016/j.procs.2014.06.008\"}]\n\t}\n  ]\n"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Multiple update workspaceitem",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\"op\":\"move\",\"from\":\"/sections/traditionalpageone/dc.contributor.author/1\", \"path\":\"/sections/traditionalpageone/dc.contributor.author/0\"},\n\t{\"op\":\"add\",\"path\":\"/sections/upload/files/0/metadata/dc.description\", \"value\":[{\"value\":\"Description of the file\"}]},\n\t{\"op\":\"add\",\"path\":\"/sections/license/granted\", \"value\": true}\n]\n"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/submission/workspaceitems/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"submission",
								"workspaceitems",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": "654"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Workflow",
			"item": [
				{
					"name": "PoolTasks by User (admin)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/workflow/pooltasks/search/findByUser?uuid=335647b6-8a52-4ecb-a8c1-7ebabb199bda",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"workflow",
								"pooltasks",
								"search",
								"findByUser"
							],
							"query": [
								{
									"key": "uuid",
									"value": "335647b6-8a52-4ecb-a8c1-7ebabb199bda"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ClaimedTasks by User (admin)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/workflow/claimedtasks/search/findByUser?uuid=335647b6-8a52-4ecb-a8c1-7ebabb199bda",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"workflow",
								"claimedtasks",
								"search",
								"findByUser"
							],
							"query": [
								{
									"key": "uuid",
									"value": "335647b6-8a52-4ecb-a8c1-7ebabb199bda"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Second page PoolTasks (admin)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://dspace7.4science.cloud/dspace-spring-rest/api/workflow/pooltasks/search/findByUser?page=1&size=20&uuid=335647b6-8a52-4ecb-a8c1-7ebabb199bda",
							"protocol": "https",
							"host": [
								"dspace7",
								"4science",
								"cloud"
							],
							"path": [
								"dspace-spring-rest",
								"api",
								"workflow",
								"pooltasks",
								"search",
								"findByUser"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "20"
								},
								{
									"key": "uuid",
									"value": "335647b6-8a52-4ecb-a8c1-7ebabb199bda"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Claim PoolTasks",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/workflow/pooltasks/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"workflow",
								"pooltasks",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Approve ClaimedTasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "submit_approve",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/workflow/claimedtasks/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"workflow",
								"claimedtasks",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users and groups",
			"item": [
				{
					"name": "EPersons list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/eperson/epersons",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"eperson",
								"epersons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Group list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/eperson/groups",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"eperson",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an EPerson",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\": {\n        \"eperson.firstname\": [{\"value\": \"New User\"}],\n        \"eperson.language\": [{\"value\": \"en\"}],\n        \"eperson.lastname\": [{\"value\": \"Surname\"}]\n    },\n    \"netid\": null,\n    \"canLogIn\": true,\n    \"email\": \"newuser@mailinator.com\",\n    \"requireCertificate\": false,\n    \"selfRegistered\": false,\n    \"type\": \"eperson\"\n}"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/eperson/epersons",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"eperson",
								"epersons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an EPerson",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/eperson/epersons/:UUID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"eperson",
								"epersons",
								":UUID"
							],
							"variable": [
								{
									"key": "UUID",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Browse and discovery",
			"item": [
				{
					"name": "Browse by title",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/discover/browses/title/items",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"discover",
								"browses",
								"title",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Browse by authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/discover/browses/author/entries",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"discover",
								"browses",
								"author",
								"entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Browse by author \"Simmons, Cameron\"",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/discover/browses/author/items?filterValue=Simmons, Cameron",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"discover",
								"browses",
								"author",
								"items"
							],
							"query": [
								{
									"key": "filterValue",
									"value": "Simmons, Cameron"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Browses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/discover/browses",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"discover",
								"browses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{dspaceresturl}}/api/discover/search/objects",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"discover",
								"search",
								"objects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Create a ResourcePolicy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"startDate\": \"2010-01-15\",\n    \"endDate\": \"2019-12-15\",\n    \"description\": \"My Description\",\n    \"name\" : \"My Name\",\n    \"action\" : \"READ\"\n}"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies?resource=8b632938-77c2-487c-81f0-e804f63e68e6&eperson=cd824a61-95be-4e16-bccd-51fea26707d0",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies"
							],
							"query": [
								{
									"key": "resource",
									"value": "8b632938-77c2-487c-81f0-e804f63e68e6"
								},
								{
									"key": "eperson",
									"value": "cd824a61-95be-4e16-bccd-51fea26707d0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a ResourcePolicy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ResourcePolicies by EPerson",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/search/eperson?uuid=914955b1-cf2e-4884-8af7-a166aa24cf73",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								"search",
								"eperson"
							],
							"query": [
								{
									"key": "uuid",
									"value": "914955b1-cf2e-4884-8af7-a166aa24cf73"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ResourcePolicies by Group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/search/group?uuid=f2c7eb75-aec0-4604-ab7f-6676723818ad",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								"search",
								"group"
							],
							"query": [
								{
									"key": "uuid",
									"value": "f2c7eb75-aec0-4604-ab7f-6676723818ad"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ResourcePolicies by Resource",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/search/resource?uuid=b7bf809e-b8ea-41bf-b16a-38d78785f557",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								"search",
								"resource"
							],
							"query": [
								{
									"key": "uuid",
									"value": "b7bf809e-b8ea-41bf-b16a-38d78785f557"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ResourcePolicies by Resource and Action",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/search/resource?uuid=343d3263-2733-4367-9dc4-216a01b4a461&action=READ",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								"search",
								"resource"
							],
							"query": [
								{
									"key": "uuid",
									"value": "343d3263-2733-4367-9dc4-216a01b4a461"
								},
								{
									"key": "action",
									"value": "READ"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a ResourcePolicy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": "10481"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ResourcePolicy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\"op\":\"replace\",\"path\":\"/description\", \"value\": \"New Description\"},\n  {\"op\":\"replace\",\"path\":\"/name\", \"value\": \"New Name\"},\n  {\"op\":\"add\",\"path\":\"/startDate\", \"value\": \"2010-01-01\"}\n]"
						},
						"url": {
							"raw": "{{dspaceresturl}}/api/authz/resourcepolicies/:ID",
							"host": [
								"{{dspaceresturl}}"
							],
							"path": [
								"api",
								"authz",
								"resourcepolicies",
								":ID"
							],
							"variable": [
								{
									"key": "ID",
									"value": "10480"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Entry point",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{dspaceresturl}}/api",
					"host": [
						"{{dspaceresturl}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Not existing endpoint",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{dspaceresturl}}/api/funny/endpoint",
					"host": [
						"{{dspaceresturl}}"
					],
					"path": [
						"api",
						"funny",
						"endpoint"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var user = pm.environment.get(\"username\");",
					"var pwd = pm.environment.get(\"password\");",
					"var protocol = pm.environment.get(\"protocol\");",
					"var resthost = pm.environment.get(\"rest-host\");",
					"var context = pm.environment.get(\"context\");",
					"var url = protocol + \"://\" + resthost + \"/\" + context + \"/api/authn/login\";",
					"console.log(url);",
					"// Example with a full fledged SDK Request",
					"const echoPostRequest = {",
					"  url: url,",
					"  method: 'POST',",
					"  //header: 'Content-Type:application/x-www-form-urlencoded',",
					" /* body: {",
					"     mode: 'raw',",
					"     raw: JSON.stringify( { user: 'dspacedemo+submit@gmail.com', password: 'dspace'  })",
					"  }*/",
					"  body: {",
					"    mode: 'formdata',",
					"    formdata: [",
					"         {key: 'user', value: user},",
					"         {key: 'password', value: pwd}",
					"    ]",
					"  }",
					"};",
					"// 1. First login attept (fails, to obtain an up to date csrf token)",
					"pm.sendRequest(echoPostRequest, function (err, res) {",
					"    var csrf = res.headers.get(\"DSPACE-XSRF-TOKEN\");",
					"    // 2. Second login attempt with a valid csrf token",
					"    echoPostRequest.header = 'X-XSRF-TOKEN: ' + csrf",
					"    pm.sendRequest(echoPostRequest, function (err2, res2) {",
					"        var token = res2.headers.get(\"Authorization\");",
					"        csrf = res2.headers.get(\"DSPACE-XSRF-TOKEN\");",
					"        var defaultToken = pm.environment.get(\"token\");",
					"        console.log(token);",
					"        if (token !== undefined && token.startsWith('Bearer ')) {",
					"            // Remove Bearer from string",
					"            token = token.slice(7, token.length).trimLeft();",
					"        } else {",
					"            token = defaultToken;",
					"        }",
					"        pm.environment.set(\"token\", token);",
					"        if (pm.request.method !== 'GET') {",
					"        // add csrf header globally (so that every request will contain the X-XSRF-TOKEN)",
					"            pm.request.headers.add( { key: 'X-XSRF-TOKEN', value: csrf });",
					"        }",
					"    });",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}